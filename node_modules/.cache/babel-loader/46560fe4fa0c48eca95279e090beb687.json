{"ast":null,"code":"import _classCallCheck from \"G:\\\\todo-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\todo-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\todo-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\todo-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\todo-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"G:\\\\todo-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"G:\\\\todo-react\\\\src\\\\Components\\\\TodoApp\\\\InputField.js\";\nimport React, { Component } from 'react';\nimport Item from './ItemList';\nimport Status from './FooterActions';\nimport withStyles from \"react-jss\";\n\nvar styles = function styles(theme) {\n  return {\n    layout: {},\n    inputWrapper: {\n      display: \"inline-flex\",\n      width: \"100%\",\n      height: \"inherit\",\n      justifyContent: \"center\"\n    },\n    checkBox: {\n      display: \"none\"\n    },\n    checkBoxWrapper: {\n      border: \"1px solid black\",\n      height: theme.PxToRem(20),\n      width: theme.PxToRem(20),\n      marginRight: theme.PxToRem(10),\n      padding: theme.PxToRem(5)\n    },\n    checkBoxValue: {\n      width: \"100%\",\n      height: \"100%\"\n    }\n  };\n};\n\nvar TodoId = 0;\n\nvar InputComponent = function InputComponent(_ref) {\n  var styles = _ref.styles;\n  return React.createElement(\"div\", {\n    className: styles.inputWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"checkbox-all\",\n    className: styles.checkBox,\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"checkbox-all\",\n    className: styles.checkBoxWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.checkBoxValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n};\n\nReact.memo(InputComponent);\n\nvar Input =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Input, _Component);\n\n  function Input(props) {\n    var _this;\n\n    _classCallCheck(this, Input);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Input).call(this, props));\n    _this.state = {\n      complete: [],\n      item: [],\n      tempValue: '',\n      allComplete: false,\n      filter: 'All'\n    };\n    _this.completeTodo = _this.completeTodo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeTodo = _this.removeTodo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.filterTodo = _this.filterTodo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateTodo = _this.updateTodo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.abortUpdateTodo = _this.abortUpdateTodo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onUpdateTodo = _this.onUpdateTodo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.completeAll = _this.completeAll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clearComplete = _this.clearComplete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Input, [{\n    key: \"addTodo\",\n    value: function addTodo() {\n      var temp = this.state.tempValue;\n\n      if (!temp) {\n        return;\n      }\n\n      var newItem = this.state.item.slice();\n      newItem.push({\n        id: ++TodoId,\n        value: temp,\n        temp: '',\n        isComplete: false\n      });\n      this.setState({\n        oldItem: newItem,\n        item: newItem,\n        tempValue: ''\n      });\n    }\n  }, {\n    key: \"removeTodo\",\n    value: function removeTodo(item) {\n      var newItem = this.state.item.slice();\n      var complete = this.state.complete.slice();\n      newItem.splice(item, 1);\n      var index = complete.indexOf(parseInt(item));\n      complete.splice(index, 1);\n      this.setState({\n        oldItem: newItem,\n        item: newItem,\n        complete: complete\n      });\n    }\n  }, {\n    key: \"filterTodo\",\n    value: function filterTodo(param) {\n      this.setState({\n        filter: param\n      });\n    }\n  }, {\n    key: \"onUpdateTodo\",\n    value: function onUpdateTodo(data, key, save) {\n      var todoItem = this.state.item.slice();\n\n      if (save) {\n        todoItem[key].temp = '';\n      }\n\n      todoItem[key].value = data;\n      this.setState({\n        item: todoItem\n      });\n    }\n  }, {\n    key: \"updateTodo\",\n    value: function updateTodo(data, key) {\n      var todo = this.state.item.slice();\n      todo[key].temp = data;\n      this.setState({\n        item: todo\n      });\n    }\n  }, {\n    key: \"abortUpdateTodo\",\n    value: function abortUpdateTodo(data, key) {\n      var todo = this.state.item.slice();\n      todo[key].value = todo[key].temp;\n      todo[key].temp = '';\n      this.setState({\n        item: todo\n      });\n    }\n  }, {\n    key: \"completeTodo\",\n    value: function completeTodo(item, key) {\n      var array = this.state.complete.slice();\n      var todo = this.state.item.slice();\n      todo[key].isComplete = !todo[key].isComplete;\n      var check = array.includes(parseInt(key));\n\n      if (check) {\n        array.splice(array.indexOf(parseInt(key)), 1);\n        this.setState({\n          complete: array,\n          item: todo\n        });\n      } else {\n        array.push(key);\n        this.setState({\n          complete: array,\n          item: todo\n        });\n      }\n\n      var length = 0;\n      todo.map(function (data, key) {\n        if (data.isComplete) {\n          ++length;\n        }\n      });\n\n      if (length !== this.state.item.length) {\n        this.setState({\n          allComplete: false\n        });\n      } else {\n        this.setState({\n          allComplete: true\n        });\n      }\n    }\n  }, {\n    key: \"clearComplete\",\n    value: function clearComplete() {\n      var item = this.state.item;\n      var data = item.slice();\n      var newData = [];\n      data.forEach(function (element) {\n        if (!element.isComplete) {\n          var index = data.indexOf(element);\n          newData.push(data[index]);\n        }\n      });\n      this.setState({\n        item: newData,\n        allComplete: false\n      });\n    }\n  }, {\n    key: \"completeAll\",\n    value: function completeAll() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var item = this.state.item;\n\n      if (!data) {\n        data = item;\n      }\n\n      var newItem = data.slice();\n      var length = 0;\n      newItem.map(function (data, key) {\n        if (!data.isComplete) {\n          ++length;\n        }\n      });\n      newItem.map(function (data, key) {\n        data.isComplete = length > 0 ? true : !data.isComplete;\n      });\n      this.setState({\n        item: newItem,\n        allComplete: !this.state.allComplete\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var item = this.state.item;\n      var classes = this.props.classes;\n      var totalComplete = 0;\n      var count = item.map(function (data, index) {\n        return data.isComplete && ++totalComplete;\n      });\n      return React.createElement(\"div\", {\n        className: classes.layout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(InputComponent, {\n        styles: classes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        onChange: function onChange() {\n          return _this2.completeAll();\n        },\n        checked: this.state.allComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        key: \"item\",\n        onSubmit: function onSubmit() {\n          return _this2.addTodo();\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            tempValue: e.target.value\n          });\n        },\n        value: this.state.tempValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.addTodo();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Add\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, this.state.item.map(function (data, key) {\n        if (_this2.state.filter === 'Complete') {\n          if (data.isComplete) {\n            return React.createElement(Item, {\n              key: data.id,\n              data: data.value,\n              abort: _this2.abortUpdateTodo,\n              onUpdates: _this2.onUpdateTodo,\n              update: _this2.updateTodo,\n              keys: key,\n              ref: \"item\".concat(key),\n              isCheck: data.isComplete,\n              onChange: function onChange(item) {\n                return _this2.completeTodo(item, key);\n              },\n              onClick: _this2.removeTodo,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 243\n              },\n              __self: this\n            });\n          }\n        } else if (_this2.state.filter === 'Active') {\n          if (!data.isComplete) {\n            return React.createElement(Item, {\n              key: data.id,\n              data: data.value,\n              abort: _this2.abortUpdateTodo,\n              onUpdates: _this2.onUpdateTodo,\n              update: _this2.updateTodo,\n              keys: key,\n              ref: \"item\".concat(key),\n              isCheck: data.isComplete,\n              onChange: function onChange(item) {\n                return _this2.completeTodo(item, key);\n              },\n              onClick: _this2.removeTodo,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 262\n              },\n              __self: this\n            });\n          }\n        } else {\n          return React.createElement(Item, {\n            key: data.id,\n            data: data.value,\n            abort: _this2.abortUpdateTodo,\n            onUpdates: _this2.onUpdateTodo,\n            update: _this2.updateTodo,\n            keys: key,\n            ref: \"item\".concat(key),\n            isCheck: data.isComplete,\n            onChange: function onChange(item) {\n              return _this2.completeTodo(item, key);\n            },\n            onClick: _this2.removeTodo,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 280\n            },\n            __self: this\n          });\n        }\n      }))), React.createElement(Status, {\n        total: this.state.item.length,\n        onClick: this.filterTodo,\n        complete: totalComplete,\n        clear: this.clearComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Input;\n}(Component);\n\nexport default withStyles(styles, {\n  withTheme: true\n})(Input);","map":{"version":3,"sources":["G:\\todo-react\\src\\Components\\TodoApp\\InputField.js"],"names":["React","Component","Item","Status","withStyles","styles","theme","layout","inputWrapper","display","width","height","justifyContent","checkBox","checkBoxWrapper","border","PxToRem","marginRight","padding","checkBoxValue","TodoId","InputComponent","memo","Input","props","state","complete","item","tempValue","allComplete","filter","completeTodo","bind","removeTodo","filterTodo","updateTodo","abortUpdateTodo","onUpdateTodo","completeAll","clearComplete","temp","newItem","slice","push","id","value","isComplete","setState","oldItem","splice","index","indexOf","parseInt","param","data","key","save","todoItem","todo","array","check","includes","length","map","newData","forEach","element","console","log","classes","totalComplete","count","addTodo","e","target","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Item from './ItemList'\r\nimport Status from './FooterActions'\r\nimport withStyles from \"react-jss\"\r\n\r\nconst styles = theme => ({\r\n  layout: {},\r\n  inputWrapper: {\r\n    display: \"inline-flex\",\r\n    width: \"100%\",\r\n    height: \"inherit\",\r\n    justifyContent: \"center\"\r\n  },\r\n  checkBox: {\r\n    display: \"none\"\r\n  },\r\n  checkBoxWrapper: {\r\n    border: \"1px solid black\",\r\n    height: theme.PxToRem(20),\r\n    width: theme.PxToRem(20),\r\n    marginRight: theme.PxToRem(10),\r\n    padding: theme.PxToRem(5)\r\n  },\r\n  checkBoxValue: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  }\r\n})\r\n\r\nlet TodoId = 0\r\n\r\nconst InputComponent = ({styles}) => {\r\n  return (\r\n    <div className={styles.inputWrapper}>\r\n      <input\r\n        id=\"checkbox-all\"\r\n        className={styles.checkBox}\r\n        type=\"checkbox\"\r\n      />\r\n      <label htmlFor=\"checkbox-all\" className={styles.checkBoxWrapper}>\r\n        <div\r\n          className={styles.checkBoxValue}\r\n        />\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nReact.memo(InputComponent)\r\n\r\nclass Input extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      complete: [],\r\n      item: [],\r\n      tempValue: '',\r\n      allComplete: false,\r\n      filter: 'All'\r\n    }\r\n    this.completeTodo = this.completeTodo.bind(this)\r\n    this.removeTodo = this.removeTodo.bind(this)\r\n    this.filterTodo = this.filterTodo.bind(this)\r\n    this.updateTodo = this.updateTodo.bind(this)\r\n    this.abortUpdateTodo = this.abortUpdateTodo.bind(this)\r\n    this.onUpdateTodo = this.onUpdateTodo.bind(this)\r\n    this.completeAll = this.completeAll.bind(this)\r\n    this.clearComplete = this.clearComplete.bind(this)\r\n  }\r\n\r\n  addTodo() {\r\n    let temp = this.state.tempValue\r\n    if (!temp) {\r\n      return\r\n    }\r\n    let newItem = this.state.item.slice()\r\n    newItem.push({\r\n      id: ++TodoId,\r\n      value: temp,\r\n      temp: '',\r\n      isComplete: false\r\n    })\r\n    this.setState({\r\n      oldItem: newItem,\r\n      item: newItem,\r\n      tempValue: ''\r\n    })\r\n  }\r\n\r\n  removeTodo(item) {\r\n    const newItem = this.state.item.slice()\r\n    const complete = this.state.complete.slice()\r\n\r\n    newItem.splice(item, 1)\r\n    let index = complete.indexOf(parseInt(item))\r\n    complete.splice(index, 1)\r\n\r\n    this.setState({\r\n      oldItem: newItem,\r\n      item: newItem,\r\n      complete: complete\r\n    })\r\n  }\r\n\r\n  filterTodo(param) {\r\n    this.setState({\r\n      filter: param\r\n    })\r\n  }\r\n\r\n  onUpdateTodo(data, key, save) {\r\n    const todoItem = this.state.item.slice()\r\n    if (save) {\r\n      todoItem[key].temp = ''\r\n    }\r\n    todoItem[key].value = data\r\n    this.setState({\r\n      item: todoItem\r\n    })\r\n  }\r\n\r\n  updateTodo(data, key) {\r\n    const todo = this.state.item.slice()\r\n    todo[key].temp = data\r\n    this.setState({\r\n      item: todo\r\n    })\r\n  }\r\n\r\n  abortUpdateTodo(data, key) {\r\n    const todo = this.state.item.slice()\r\n    todo[key].value = todo[key].temp\r\n    todo[key].temp = ''\r\n    this.setState({\r\n      item: todo\r\n    })\r\n  }\r\n\r\n  completeTodo(item, key) {\r\n    const array = this.state.complete.slice()\r\n    const todo = this.state.item.slice()\r\n    todo[key].isComplete = !todo[key].isComplete\r\n    const check = array.includes(parseInt(key))\r\n    if (check) {\r\n      array.splice(array.indexOf(parseInt(key)), 1)\r\n      this.setState({\r\n        complete: array,\r\n        item: todo\r\n      })\r\n    } else {\r\n      array.push(key)\r\n      this.setState({\r\n        complete: array,\r\n        item: todo\r\n      })\r\n    }\r\n    let length = 0\r\n    todo.map((data, key) => {\r\n      if (data.isComplete) {\r\n        ++length\r\n      }\r\n    })\r\n    if (length !== this.state.item.length) {\r\n      this.setState({ allComplete: false })\r\n    } else {\r\n      this.setState({ allComplete: true })\r\n    }\r\n  }\r\n\r\n  clearComplete() {\r\n    const { item } = this.state\r\n    const data = item.slice()\r\n    let newData = []\r\n    data.forEach(element => {\r\n      if (!element.isComplete) {\r\n        const index = data.indexOf(element)\r\n        newData.push(data[index])\r\n      }\r\n    })\r\n    this.setState({\r\n      item: newData,\r\n      allComplete: false\r\n    })\r\n  }\r\n\r\n  completeAll(data = '') {\r\n    const { item } = this.state\r\n    if (!data) {\r\n      data = item\r\n    }\r\n    const newItem = data.slice()\r\n    let length = 0\r\n    newItem.map((data, key) => {\r\n      if (!data.isComplete) {\r\n        ++length\r\n      }\r\n    })\r\n    newItem.map((data, key) => {\r\n      data.isComplete = (length > 0) ? true : !data.isComplete\r\n    })\r\n    this.setState({\r\n      item: newItem,\r\n      allComplete: !this.state.allComplete\r\n    })\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    console.log(this)\r\n  }\r\n\r\n  render() {\r\n    const { item } = this.state\r\n    const { classes } = this.props\r\n    let totalComplete = 0\r\n    const count = item.map((data, index) => data.isComplete && ++totalComplete)\r\n    return (\r\n      <div className={classes.layout}>\r\n        <InputComponent styles={classes}/>\r\n        <center>\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={() => this.completeAll()}\r\n            checked={this.state.allComplete}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            key=\"item\"\r\n            onSubmit={() => this.addTodo()}\r\n            onChange={e => this.setState({ tempValue: e.target.value })}\r\n            value={this.state.tempValue}\r\n          />\r\n          <button onClick={() => this.addTodo()}>Add</button>\r\n          <div>\r\n            <ul>\r\n              {this.state.item.map((data, key) => {\r\n                if (this.state.filter === 'Complete') {\r\n                  if (data.isComplete) {\r\n                    return (\r\n                      <Item\r\n                        key={data.id}\r\n                        data={data.value}\r\n                        abort={this.abortUpdateTodo}\r\n                        onUpdates={this.onUpdateTodo}\r\n                        update={this.updateTodo}\r\n                        keys={key}\r\n                        ref={`item${key}`}\r\n                        isCheck={data.isComplete}\r\n                        onChange={item =>\r\n                          this.completeTodo(item, key)\r\n                        }\r\n                        onClick={this.removeTodo}\r\n                      />\r\n                    )\r\n                  }\r\n                } else if (this.state.filter === 'Active') {\r\n                  if (!data.isComplete) {\r\n                    return (\r\n                      <Item\r\n                        key={data.id}\r\n                        data={data.value}\r\n                        abort={this.abortUpdateTodo}\r\n                        onUpdates={this.onUpdateTodo}\r\n                        update={this.updateTodo}\r\n                        keys={key}\r\n                        ref={`item${key}`}\r\n                        isCheck={data.isComplete}\r\n                        onChange={item =>\r\n                          this.completeTodo(item, key)\r\n                        }\r\n                        onClick={this.removeTodo}\r\n                      />\r\n                    )\r\n                  }\r\n                } else {\r\n                  return (\r\n                    <Item\r\n                      key={data.id}\r\n                      data={data.value}\r\n                      abort={this.abortUpdateTodo}\r\n                      onUpdates={this.onUpdateTodo}\r\n                      update={this.updateTodo}\r\n                      keys={key}\r\n                      ref={`item${key}`}\r\n                      isCheck={data.isComplete}\r\n                      onChange={item => this.completeTodo(item, key)}\r\n                      onClick={this.removeTodo}\r\n                    />\r\n                  )\r\n                }\r\n              })}\r\n            </ul>\r\n          </div>\r\n          <Status\r\n            total={this.state.item.length}\r\n            onClick={this.filterTodo}\r\n            complete={totalComplete}\r\n            clear={this.clearComplete}\r\n          />\r\n        </center>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Input)\r\n"]},"metadata":{},"sourceType":"module"}